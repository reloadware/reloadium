plugins {
    id('java')
    id('org.jetbrains.intellij') version '1.5.2'
    id("org.jetbrains.kotlin.jvm") version "1.6.20"
    id('com.adarshr.test-logger') version '3.1.0'
}

group 'com.reloadware'
version '0.8.4' //  # RwRender: version '{{ ctx.version }}' //

repositories {
    mavenCentral()
    maven {
        url "https://www.jetbrains.com/intellij-repository/releases"
    }
    maven {
        url "https://www.jetbrains.com/intellij-repository/snapshots"
    }
    maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }
    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/groups/public'
    }
    maven {
        url 'https://packages.jetbrains.team/maven/p/ij/intellij-dependencies'
    }
}

def remoteRobotVersion = "0.11.7"

dependencies {
    implementation('io.sentry:sentry:5.6.1') {
        exclude group: 'org.slf4j'
    }

    implementation(
            'net.lingala.zip4j:zip4j:2.9.1',
            'commons-io:commons-io:2.11.0',
    )

    testImplementation(
            'com.intellij.remoterobot:remote-robot:' + remoteRobotVersion,
            'com.intellij.remoterobot:remote-fixtures:' + remoteRobotVersion,
            'com.squareup.okhttp3:logging-interceptor:4.9.3',
            "com.redhat.devtools.intellij:intellij-common:1.1.0",
            'org.junit.jupiter:junit-jupiter-api:5.7.0',
            'com.redhat.devtools.intellij:intellij-common-ui-test-library:0.0.4',
            'com.automation-remarks:video-recorder-junit5:2.0',
            "org.mock-server:mockserver-netty:5.12.0",
            "org.mock-server:mockserver-client-java:5.12.0:shaded",
            'org.assertj:assertj-core:3.22.0',
            'org.powermock:powermock-core:2.0.9',
            'org.mockito:mockito-inline:3.12.4',
            'org.mockito:mockito-junit-jupiter:3.12.4'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    )
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'tests/java'
        }
        kotlin {
            srcDir 'tests/kotlin'
        }
        resources {
            srcDir 'tests/resources'
        }
    }
}

intellij {
    version = intellijVersion
    type = intellijType
    downloadSources = intellijDownloadSources as Boolean
    plugins = [intellijPlugin]
    updateSinceUntilBuild = false
}

// Pro
//intellij {
//    version = 'PY-2021.3.2'
//    type = 'PY'
//    downloadSources = true
//    plugins = ["python"]
//    updateSinceUntilBuild = false
//}

test {
    useJUnitPlatform()
}

downloadRobotServerPlugin {
    version.set(remoteRobotVersion)
}

runIdeForUiTests {
    systemProperty "robot-server.port", "8082"
    systemProperty "ide.mac.message.dialogs.as.sheets", "false"
    systemProperty "jb.privacy.policy.text", "<!--999.999-->"
    systemProperty "jb.consents.confirmation.enabled", "false"
    systemProperty "ide.mac.file.chooser.native", "false"
    systemProperty "apple.laf.useScreenMenuBar", "false"
    systemProperty "idea.trust.all.projects", "true"
    systemProperty "ide.show.tips.on.startup.default.value", "false"
}

publishPlugin {
    token = System.getenv("PYCHARM_HUBTOKEN")
}

runPluginVerifier {
    ideVersions = ["IU-211.7628.21", "IU-212.5712.43 ", "IU-213.7172.25", "IU-221.5080.93", "IU-203.8084.24"]
}

tasks.processResources{
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

runIde {
    jvmArgs '-Xmx8G'
    maxHeapSize = "8g"
}
